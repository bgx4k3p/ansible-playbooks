---
# process_stack.yaml - Process a single Portainer stack

- name: Find stack ID for {{ stack_name }}
  set_fact:
    current_stack: "{{ stacks_response.json | selectattr('Name', 'equalto', stack_name) | list | first | default({}) }}"
    stack_id: "{{ stacks_response.json | selectattr('Name', 'equalto', stack_name) | map(attribute='Id') | list | first | default('') }}"

- name: Exit if stack not found
  fail:
    msg: "Stack '{{ stack_name }}' not found in Portainer"
  when: current_stack == {} or stack_id == ''

- name: Get stack details
  uri:
    url: "{{ portainer_url }}/api/stacks/{{ stack_id }}"
    method: GET
    headers: "{{ headers }}"
    validate_certs: "{{ verify_ssl }}"
    return_content: true
  register: stack_details

- name: Get stack file content from API
  uri:
    url: "{{ portainer_url }}/api/stacks/{{ stack_id }}/file"
    method: GET
    headers: "{{ headers }}"
    validate_certs: "{{ verify_ssl }}"
    return_content: true
  register: stack_file_response

- name: Set stack content from appropriate field
  set_fact:
    stack_content: "{{ 
      stack_details.json.StackFileContent | default(
      stack_details.json.stackFileContent) | default(
      stack_details.json.content) | default(
      stack_details.json.Content) | default(
      stack_file_response.json.StackFileContent) | default(
      stack_file_response.json.stackFileContent) | default(
      stack_file_response.json.content) | default(
      stack_file_response.json.Content) | default('')
      }}"

- name: Exit if no content found
  fail:
    msg: "Could not find docker-compose content for stack {{ stack_name }}"
  when: stack_content == ''

- name: Parse docker-compose and extract images
  set_fact:
    compose_yaml: "{{ stack_content | from_yaml }}"
    stack_env_vars: "{{ stack_details.json.Env | default([]) }}"

- name: Extract all service images
  set_fact:
    services: "{{ compose_yaml.services | default({}) }}"
  when: compose_yaml is defined and compose_yaml.services is defined

- name: Log stack processing
  debug:
    msg: "Processing stack '{{ stack_name }}' with {{ services | length }} services"
  when: services is defined

- name: Process each service with its image
  include_tasks: process_service.yaml
  loop: "{{ services | dict2items }}"
  loop_control:
    loop_var: service_item
    label: "{{ service_item.key }}"
  when: services is defined and services | length > 0