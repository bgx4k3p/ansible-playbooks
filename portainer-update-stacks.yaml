---
# portainer-update-stacks.yaml - Check and update Portainer stacks with latest images

- name: Update Portainer stacks with latest images
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    portainer_url: ''       # Portainer URL, e.g. "https://192.168.1.31:9443"
    api_key: ''             # Portainer API Key for authentication
    stacks_to_update: []    # List of stack names to update, i.e. ['stack1', 'stack2']
    verify_ssl: false       # Set to true if your Portainer has a valid SSL certificate
    clean_up_images: true   # Set to true to clean up unused images
    
  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - portainer_url | length > 0
          - api_key | length > 0
          - stacks_to_update | length > 0
        fail_msg: "Missing required variables. Please provide portainer_url, api_key, and stacks_to_update."

  tasks:
    - name: Set up headers for Portainer API
      set_fact:
        headers:
          X-API-Key: "{{ api_key }}"
          Content-Type: "application/json"

    - name: Get endpoints from Portainer
      uri:
        url: "{{ portainer_url }}/api/endpoints"
        method: GET
        headers: "{{ headers }}"
        validate_certs: "{{ verify_ssl }}"
        return_content: true
      register: endpoints_response

    - name: Set endpoint ID (using the first endpoint)
      set_fact:
        endpoint_id: "{{ endpoints_response.json[0].Id }}"
      when: endpoints_response.json | length > 0
      failed_when: endpoints_response.json | length == 0

    - name: Get stacks from Portainer
      uri:
        url: "{{ portainer_url }}/api/stacks"
        method: GET
        headers: "{{ headers }}"
        validate_certs: "{{ verify_ssl }}"
        return_content: true
      register: stacks_response

    - name: Process each stack in the list
      include_tasks: portainer/process_stack.yaml
      loop: "{{ stacks_to_update }}"
      loop_control:
        loop_var: stack_name
        label: "{{ stack_name }}"

    # Use separate cleanup script
    - name: Clean up unused Docker images
      include_tasks: portainer/clean_up_images.yaml
      when: clean_up_images | bool