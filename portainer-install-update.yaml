---
- name: Install and Update Portainer CE with Docker and Check for Updates
  hosts: '{{ target_hosts }}'  # Replace with your target host group or hostname
  become: true

  vars:
    portainer_image: portainer/portainer-ce
    portainer_tag: latest
    portainer_container_name: portainer
    portainer_http_port: 8000
    portainer_https_port: 9443
    portainer_data_volume: portainer_data
    docker_socket: /var/run/docker.sock

  tasks:
    - name: Get local Portainer image information
      docker_image_info:
        name: "{{ portainer_image }}:{{ portainer_tag }}"
      register: local_image_info

    - name: Get remote Portainer image information
      uri:
        url: "https://hub.docker.com/v2/repositories/{{ portainer_image }}/tags/{{ portainer_tag }}"
        method: GET
        return_content: yes
      register: remote_image_info
      become: false
      failed_when: false

    - name: Set local and remote dates
      set_fact:
        local_created_at: "{{ local_image_info.images[0].Created if (local_image_info.images is defined and local_image_info.images | length > 0) else '' }}"
        remote_created_at: "{{ remote_image_info.json.last_updated if (remote_image_info.status == 200 and remote_image_info.json is defined) else '' }}"

    - name: Set update needed flag
      set_fact:
        update_needed: >-
          {{ local_created_at == '' or remote_created_at == '' or local_created_at < remote_created_at }}

    - name: Pull Portainer CE image
      docker_image:
        name: "{{ portainer_image }}:{{ portainer_tag }}"
        source: pull
        force_source: yes
      when: update_needed

    - name: Check if Portainer container exists
      shell: docker ps -a | grep -w "{{ portainer_container_name }}" || true
      register: container_exists
      changed_when: false

    - name: Stop and remove existing Portainer container
      docker_container:
        name: "{{ portainer_container_name }}"
        state: absent
      when: container_exists.stdout != ""

    - name: Run Portainer CE container
      docker_container:
        name: "{{ portainer_container_name }}"
        image: "{{ portainer_image }}:{{ portainer_tag }}"
        ports:
          - "{{ portainer_http_port }}:{{ portainer_http_port }}"
          - "{{ portainer_https_port }}:{{ portainer_https_port }}"
        volumes:
          - "{{ docker_socket }}:{{ docker_socket }}"
          - "{{ portainer_data_volume }}:/data"
        detach: true
        restart_policy: always